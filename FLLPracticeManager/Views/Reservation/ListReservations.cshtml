@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@* @model IEnumerable<FLLPracticeManager.Models.ReservationVM>
 *@

@{
    ViewData["Title"] = "Rezervasyon Listesi";
}

<h2>Rezervasyon Listesi</h2>
<br />

<select class="form-control" id="tableSelect">
    <option value="0">Masa Seçin</option>
    <option value="1">Masa 1</option>
    <option value="2">Masa 2</option>
    <option value="3">Masa 3</option>
    <option value="4">Masa 4</option>
    <option value="5">Masa 5</option>
    <option value="6">Masa 6</option>
    <option value="7">Masa 7</option>
    <option value="8">Masa 8</option>
    <option value="9">Masa 9</option>
    <option value="10">Masa 10</option>
</select>
<br />
<br />

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Takım Numarası</th>
            <th>Takım İsmi</th>
            <th>Masa Numarası</th>
            <th>Başlangıç Zamanı</th>
            <th>Bitiş Zamanı</th>
            <th>Sil</th>
        </tr>

    </thead>
    <tbody id="reservationTable">

    </tbody>
</table>




<script>

    $(document).ready(function () {
        getReservationSlots();


        // Add event listener to the table select
        $('#tableSelect').change(function () {
            // Get the selected table number
            var tableNumber = $(this).val();

            // Filter the reservations by the selected table number
            getReservations();
        });
    });

    //getReservations() should be periodically called to keep page up to date


    function getReservations() {

        // Get the selected table number from tableSelect
        var tableNumber = $('#tableSelect').val();

        // If the selected table number is 0, do nothing
        if (tableNumber === '0') {
            return;
        }
        else {
            // If the selected table number is not 0, call GetReservations with parameter
            $.ajax({
                url: '/Reservation/GetReservations',
                type: 'GET',
                data: { tableNumber: tableNumber },
                success: function (data) {
                    // Update the UI with the reservations
                    updateReservations(data);
                }
            });
        }



        // // Get all reservations from the server
        // $.ajax({
        //     url: '/Reservation/GetReservations,
        //     type: 'GET',
        //     success: function (data) {
        //         // Update the UI with the reservations
        //         updateReservations(data);

        //     }
        // });
    }

    function updateReservations(data) {

        // Clear the table before updating
        clearTable();

        // This function will fill the "Takım Numarası", "Takım İsmi", "Masa Numarası" columns, leaving the other columns empty. Also it should put reservationId in the <tr>
        var tableBody = $('#reservationTable');
        
        // Find the row with the reservationId and update the columns
        data.forEach(function (reservation) {
            var row = tableBody.find('tr[data-slotId="' + reservation.reservationSlotId + '"]');
            row.find('td').eq(0).text(reservation.teamNumber);
            row.find('td').eq(1).text(reservation.teamName);
            row.find('td').eq(2).text(reservation.tableNumber);
            row.attr('data-reservationId', reservation.id);


        });
    }
    
    function clearTable() {
        // Only clears reservation info, keeps slot info
        var tableBody = $('#reservationTable');

        tableBody.find('tr').each(function () {
            $(this).find('td').eq(0).text('');
            $(this).find('td').eq(1).text('');
            $(this).find('td').eq(2).text('');
            $(this).attr('data-reservationId', '');
        });

    }

    function getReservationSlots() {
        // Get all reservation slots from the server
        $.ajax({
            url: '/Reservation/GetReservationSlots',
            type: 'GET',
            success: function (data) {
                // Update the UI with the reservation slots
                generateTable(data);
            }
        });
    }


    function generateTable(data) {
        // This function will only fill the "Başlangıç Zamanı", "Bitiş Zamanı" columns, leaving the other columns empty. Also it should put slotId in the <tr>
        var tableBody = $('#reservationTable');
        tableBody.empty();

        data.forEach(function (reservationSlot) {
            var row = $('<tr>');
            row.append($('<td>').text(''));
            row.append($('<td>').text(''));
            row.append($('<td>').text(''));
            row.append($('<td>').text(reservationSlot.startTime));
            row.append($('<td>').text(reservationSlot.endTime));
            row.append($('<td>').append($('<btn>').addClass('btn btn-danger').attr('id', 'delete_' + reservationSlot.id).text('Sil'))); 
            row.attr('data-slotId', reservationSlot.id);

            tableBody.append(row);

            // Add event listeners to the delete buttons
            $('#delete_' + reservationSlot.id).click(function () {
                deleteReservation($(this).parent().parent().attr('data-slotId'));
            });
        });
        
        // Load the reservations after the table is generated
        getReservations();
    }

    function deleteReservation(slotId) {

        // Get the table number
        var tableNumber = $('#tableSelect').val();

        // Check if tableNumber is valid
        if (tableNumber === '0') {
            alert('Lütfen bir masa seçin.');
            return;
        }

        // Delete the reservation from the server



        $.ajax({
            url: '/Reservation/DeleteReservation',
            type: 'POST',
            data: { slotId: slotId, table: tableNumber},
            success: function (response) {
                // Check for success status in response, this depends on your server response
                if (response.success === true) { 
                    alert('Rezervasyon başarıyla silindi!');
                    getReservations();
                } else {
                    alert('Rezervasyon eklenirken bir hata oluştu.');
                }
            },
            error: function () {
                alert('Sunucuya bağlanırken bir hata oluştu.');
            }
        });
    }
</script>
